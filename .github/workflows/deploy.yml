name: Build and deploy

on:
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: ${{ secrets.GCP_SERVICE_NAME }}
  DOCKER_IMAGE: asia.gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_SERVICE_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}
    
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0

    - name: Set up zone GCP
      run: gcloud config set compute/zone ${{ secrets.GCP_REGION }}

    - name: Authorize docker
      run: gcloud auth configure-docker
    
    - name: Build and push to GCR
      run: |-
        docker build -t $DOCKER_IMAGE:${{ github.ref_name }} -t $DOCKER_IMAGE:latest .
        docker push $DOCKER_IMAGE:${{ github.ref_name }}
        docker push $DOCKER_IMAGE:latest

    - name: printenv
      run: printenv

    - name: Create .env file
      run: |-
        touch .env
        echo "${{ secrets.APP_ENV }}" >> .env
    
    - name: Create new instance template with docker image
      run: gcloud compute instance-templates create-with-container $SERVICE_NAME-template:${{ github.ref_name }} \
       --machine-type=${{ secrets.GCP_MACHINE_TYPE }} \ 
       --network-interface=subnet=${{ secrets.GCP_NETWORK_SUBNET }},no-addres \
       --service-account=${{ secrets.GCP_SERVICE_ACCOUNT }} \
       --container-image=$DOCKER_IMAGE \
       --container-restart-policy=on-failure \
       --container-env-file ./.env \
       --boot-disk-type pd-ssd \
       --shielded-secure-boot \ 
       --shielded-vtpm \
       --shielded-integrity-monitoring