name: Build and deploy

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: ${{ secrets.GCP_SERVICE_NAME }}
  DOCKER_IMAGE: asia.gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_SERVICE_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}
    
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0

    - name: Set up zone GCP
      run: gcloud config set compute/zone ${{ secrets.GCP_REGION }}

    - name: Authorize docker
      run: gcloud auth configure-docker
    
    - name: Build and push to GCR
      run: |-
        docker build -t $DOCKER_IMAGE:$GITHUB_SHA -t $DOCKER_IMAGE:latest .
        docker push $DOCKER_IMAGE:$GITHUB_SHA
        docker push $DOCKER_IMAGE:latest

    - name: Stop and remove existed container
      continue-on-error: true
      run: gcloud compute ssh $SERVICE_NAME --command="docker stop $SERVICE_NAME && docker rm $SERVICE_NAME"

    - name: Cleanup docker
      run: gcloud compute ssh $SERVICE_NAME --command="docker system prune -f -a"

    - name: Set access token environment variable
      run: echo "GCP_OAUTH2_ACCESS_TOKEN=$(gcloud auth print-access-token)" >> $GITHUB_ENV
    
    - name: Authorize docker inside GCE
      run: gcloud compute ssh $SERVICE_NAME --command="docker login -u oauth2accesstoken -p $GCP_OAUTH2_ACCESS_TOKEN https://asia.gcr.io"
    
    - name: Pull docker image and deploy container
      run: gcloud compute ssh $SERVICE_NAME --command="docker pull $DOCKER_IMAGE:$GITHUB_SHA && docker run -d -p ${{ secrets.PORT }}:${{ secrets.PORT }} --name=$SERVICE_NAME --restart=always $DOCKER_IMAGE:$GITHUB_SHA"